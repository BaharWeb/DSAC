@techreport{Wood1992Prototyping,
abstract = {Prototyping, the creation and enaction of models based on operational scenarios, has been advocated as a useful software engineering paradigm because it lends itself to intense interaction between customers, users, and developers, resulting in early validation of specifications and designs. An extensive and widespread interest in software prototyping in recent years has resulted in a daunting amount of literature and dozens of proposed methods and tools. As with any immature and growing technology, the expanding literature and approaches have resulted in correspondingly expansive and confusing terminology. This report presents an overview of technology and literature relating to the creation and use of software system prototypes. In addition to an annotated bibliography of recent prototyping literature, a technology framework, taxonomy, and series of classifications are provided. The intent of this report is to provide a basic road map through the available literature and technology.},
address = {Pittsburgh, PA},
author = {Wood, David and Kang, Kyo},
doi = {10.1.1.648.435},
file = {:Users/sebastian/Downloads/1992{\_}005{\_}001{\_}16067.pdf:pdf},
institution = {Software Engineering Institute, Carnegie Mellon University},
number = {CMU/SEI-92-TR-013},
title = {{A Classification and Bibliography of Software Prototyping}},
url = {http://resources.sei.cmu.edu/library/asset-view.cfm?AssetID=11641},
year = {1992}
}
@incollection{Black2019Levensthein,
booktitle = {Dictionary of Algorithms and Data Structures},
editor = {Black, Paul E.},
publisher = {CRC Press LLC},
title = {{Algorithms and Theory of Computation Handbook - Levenshtein Distance}},
url = {https://xlinux.nist.gov/dads/HTML/Levenshtein.html},
year = {2019}
}
@incollection{Sneed2010ReMiP,
abstract = {Das Thema 'Software-Migration' behandelt die {\"{U}}berf{\"{u}}hrung eines Softwaresystems in eine andere Zielumgebung, ohne dessen Funktionalit{\"{a}}t zu ver{\"{a}}ndern. Die Migration ist ein wesentliches Verfahren zum Erhalt bestehender Softwarefunktionalit{\"{a}}t in modernen, technischen Umgebungen. Dieses Buch f{\"{u}}hrt in die Migrationsproblematik ein und beschreibt deren Grundlagen und Terminologie. Es stellt Prozess- und Vorgehensmodelle vor und besch{\"{a}}ftigt sich mit Werkzeugen zur Unterst{\"{u}}tzung der Migration. Erfahrungsberichte aus konkreten Projekten beschreiben praxisnah den aktuellen Stand der Software-Migration.},
annote = {Introduction to Migration
Strategies: Re-Implementation, Conversion, Wrapping},
author = {Sneed, Harry M and Wolf, Ellen and Heilmann, Heidi},
booktitle = {Software-Migration in der Praxis: {\"{U}}bertragung alter Softwaresysteme in eine moderne Umgebung},
chapter = {4},
edition = {1},
isbn = {978-3898645645},
pages = {85--132},
publisher = {dpunkt Verlag},
title = {{Der Reference Migration Process (ReMiP)}},
year = {2010}
}
@article{Mackay2000,
author = {Mackay, Hugh and Carne, Chris and Beynon-Davies, Paul and Tudhope, Doug},
doi = {10.1177/030631200030005004},
file = {:Users/sebastian/Downloads/030631200030005004.pdf:pdf},
issn = {0306-3127},
journal = {Social Studies of Science},
month = {oct},
number = {5},
pages = {737--757},
title = {{Reconfiguring the User: Using Rapid Application Development}},
url = {http://journals.sagepub.com/doi/10.1177/030631200030005004},
volume = {30},
year = {2000}
}
@misc{W3C2018WebComponents,
author = {W3C},
keywords = {WebComponents,standard},
mendeley-tags = {WebComponents,standard},
title = {{Web Components}},
url = {https://www.w3.org/standards/techs/components{\#}w3c{\_}all},
urldate = {2019-02-24},
year = {2018}
}
@misc{CMUSoftwareEngineeringInstitute2013a,
author = {{CMU Software Engineering Institute}},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/CMU Software Engineering Institute - 2013 - SMART-MP Workshop.pptx:pptx},
keywords = {SMART,candidate},
mendeley-tags = {SMART,candidate},
pages = {1--11},
title = {{SMART-MP Workshop}},
year = {2013}
}
@article{Neumann2018PublicApis,
abstract = {Businesses are increasingly deploying their services on the web, in the form of web applications, SOAP services, message-based services, and, more recently, REST services. Although the movement towards REST is widely recognized, there is not much concrete information regarding the technical features being used in the field, such as typical data formats, how HTTP verbs are being used, or typical URI structure, just to name a few. In this paper, we go through the Alexa.com top 4000 most popular sites to identify precisely 500 websites claiming to provide a REST web service API. We analyze these 500 APIs for key technical features, degree of compliance with REST architectural principles (e.g., resource addressability), and for adherence to best practices (e.g., API versioning). We observed several trends (e.g., widespread JSON support, software-generated documentation), but, at the same time, high diversity in services, including differences in adherence to best practices, with only 0.8{\%} of services strictly complying with all REST principles. Our results can help practitioners evolve guidelines and standards for designing higher quality services and also understand deficiencies in currently deployed services. Researchers may also benefit from the identification of key research areas, contributing to the deployment of more reliable services.},
author = {Neumann, Andy and Laranjeiro, Nuno and Bernardino, Jorge},
doi = {10.1109/TSC.2018.2847344},
file = {:Users/sebastian/Downloads/TSC-2017-08-0248.R2-main.pdf:pdf},
issn = {1939-1374},
journal = {IEEE Transactions on Services Computing},
keywords = {API,HTTP,REST,RESTful,Web,Web Services,Web Services Analysis},
number = {November},
pages = {1--1},
title = {{An Analysis of Public REST Web Service APIs}},
url = {https://ieeexplore.ieee.org/document/8385157/},
year = {2018}
}
@inproceedings{Rivero2014Electra,
abstract = {The implementation of APIs in new applications is becoming a mandatory requirement due to the increasing use of cloud-based solutions, the necessity of integration with ubiquitous applications (like Facebook or Twitter) and the need to facilitate multi-platform support from scratch in the development. However, there is still no theoretically sound process for defining APIs (starting from end-user requirements) or their productive development and evolution, which represents a complex task. Moreover, high-level solutions intended to boost productivity of API development (usually based on Model-Driven Development methodologies) are often difficult to adapt to specific use cases and requirements. In this paper we propose a methodology that allows capturing requirements related to APIs using end-user-friendly artifacts. These artifacts allow quickly generating a first running version of the API with a specific architecture, which facilitates introducing refinements in it through direct coding, as is commonly accomplished in code-based Agile processes.},
address = {Toulouse, France},
author = {Rivero, Jos{\'{e}} Mat{\'{i}}as and Heil, Sebastian and Grigera, Juli{\'{a}}n and {Robles Luna}, Esteban and Gaedke, Martin},
booktitle = {Web Engineering: Proceedings of the 14th International Conference, ICWE 2014},
doi = {10.1007/978-3-319-08245-5_35},
editor = {Casteleyn, S. and Rossi, G. and Winckler, M.},
isbn = {978-3-319-08244-8},
issn = {16113349},
keywords = {API,Agile Development,Model-Driven Development,Prototyping,meAuthor},
mendeley-tags = {meAuthor},
pages = {494--497},
publisher = {Springer, Cham},
title = {{An Extensible, Model-Driven and End-User Centric Approach for API Building}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84921810134{\&}partnerID=tZOtx3y1 http://link.springer.com/10.1007/978-3-319-08245-5{\_}35},
volume = {8541},
year = {2014}
}
@article{Alavi1984,
abstract = {A two-phased research project comparing the prototyping approach with the more traditional life cycle approach finds that prototyping facilitates communication between users and designers during the design process. However, the findings also indicate that designers who used prototyping experienced difficulties in managing and controlling the design process.},
author = {Alavi, Maryam},
doi = {10.1145/358080.358095},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Alavi - 1984 - An assessment of the prototyping approach to information systems development.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
month = {jun},
number = {6},
pages = {556--563},
title = {{An assessment of the prototyping approach to information systems development}},
url = {http://portal.acm.org/citation.cfm?doid=358080.358095},
volume = {27},
year = {1984}
}
@article{AbdullahiSaniAdilaFirdausSeungRyulJeong2013,
abstract = {Agile methodology such as Scrum, Extreme Programming (XP), Feature Driven Development (FDD) and the Dynamic System Development Method (DSDM) have gained enough recognition as efficient development process by delivering software fast even under the time constrains. However, like other agile methods DSDM has been criticized because of unavailability of security element in its four phases. In order to have a deeper look into the matter and discover more about the reality, we conducted a literature review. Our findings highlight that, in its current form, the DSDM does not support developing secure software. Although, there are a few researches on this topic about Scrum, XP and FDD but, based on our findings, there is no research on developing secure software using DSDM. Thus, in our future work we intend to propose enhanced DSDM that will cater the security aspects in software development.},
author = {{Abdullahi Sani, Adila Firdaus, Seung Ryul Jeong}, Imran Ghani},
file = {:Users/sebastian/Downloads/pxc3888527.pdf:pdf},
issn = {0975-8887},
journal = {International Journal of Computer Applications},
keywords = {Agile Development,DSDM,Dynamic System Development Method,Software Engineering,Software Security},
number = {25},
pages = {975--8887},
title = {{A Review on Software Development Security Engineering using Dynamic System Method (DSDM)}},
volume = {69},
year = {2013}
}
@book{HCD2015,
author = {IDEO},
edition = {1},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/IDEO - 2015 - The Field Guide to Human-Centered Design.pdf:pdf},
isbn = {978-0-9914063-1-9},
publisher = {IDEO.org},
title = {{The Field Guide to Human-Centered Design}},
year = {2015}
}
@article{Chudnovskyy2010DGS,
abstract = {Data integration and content publishing in terms of Linked Data is a complex and time-consuming task while developing Web 2.0 applications. Considering this problem separately from architecture design increases application maintenance effort and causes additional overhead to provide public access functions. In this paper, we present the WebComposition/ Data Grid Service and its data management capabilities to meet demands of modern Web 2.0 applications. We show how to facilitate the application implementation and shorten development time by applying the Data Grid Service as Web Service-based storage solution.},
author = {Chudnovskyy, Olexiy and Gaedke, Martin},
file = {:Users/sebastian/Downloads/dgs.pdf:pdf},
isbn = {9781612081052},
journal = {The Second International Conferences on Advanced Service Computing (Service Computation 2010)},
keywords = {REST,linked data,web 2.0},
number = {c},
pages = {55--61},
title = {{Development of Web 2.0 Applications using WebComposition / Data Grid Service}},
year = {2010}
}
@article{Tripp1990,
abstract = {There is a design methodology called rapid prototyping which has been used successfully in software engineering. Given the similarities between software design and instructional design, we argue that rapid prototyping is a viable model for instructional design, especially for computer-based instruction. Additionally, we argue that recent theories of design offer plausible explanations for the apparent success of rapid prototyping in software design. Such theories also support the notion that rapid prototyping is appropriate for instructional design. We offer guidelines for the use of rapid prototyping and list possible tradeoffs in its application.},
author = {Tripp, Steven D. and Bichelmeyer, Barbara},
doi = {10.1007/BF02298246},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Tripp, Bichelmeyer - 1990 - Rapid prototyping An alternative instructional design strategy.pdf:pdf},
issn = {1042-1629},
journal = {Educational Technology Research and Development},
month = {mar},
number = {1},
pages = {31--44},
pmid = {10346315},
title = {{Rapid prototyping: An alternative instructional design strategy}},
url = {http://link.springer.com/10.1007/BF02298246},
volume = {38},
year = {1990}
}
@techreport{ForresterResearch2011Modernization,
author = {{Forrester Research}},
booktitle = {Forrester Consulting},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Forrester Research - 2011 - Application Modernization Procrastinate At Your Peril !.pdf:pdf},
title = {{Application Modernization : Procrastinate At Your Peril !}},
url = {http://www.enterprisecioforum.com/en/whitepaper/application-modernization-procrastinate},
year = {2011}
}
@book{Stapleton1997DSDM,
author = {Stapleton, Jennifer},
edition = {1},
isbn = {978-0201178890},
publisher = {Addison-Wesley Professional},
title = {{DSDM, dynamic systems development method: the method in practice}},
year = {1997}
}
@article{Nebeling2013CrowdAdapt,
abstract = {The range and growing diversity of new devices makes it in- creasingly difficult to design suitable web interfaces for every browsing client. We present CrowdAdapt—a context-aware web design tool that supports developers in the creation of adaptive layout solutions for a wide variety of use contexts by crowdsourcing web site adaptations designed for individ- ual viewing conditions and preferences. We focus on one ex- periment we conducted for an existing news web site using CrowdAdapt (i) to explore the design space in terms of lay- out alternatives created by the crowd, (ii) to identify adapta- tion preferences with respect to different viewing situations, and (iii) to assess the perceived quality of crowd-generated layouts in terms of reading comfort and efficiency. The re- sults suggest that crowdsourced adaptation could lead to very flexible web interfaces informed by individual end-user re-quirements. In particular, scenarios such as the adaptation to large-screen contexts that the majority of web sites fail to address could be supported with relatively little effort.},
author = {Nebeling, Michael and Speicher, Maximilian and Norrie, Mc},
doi = {10.1145/2480296.2480304},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Nebeling, Speicher, Norrie - 2013 - CrowdAdapt enabling crowdsourced web page adaptation for individual viewing conditions and preferenc.pdf:pdf},
isbn = {9781450321389},
journal = {Proceedings of the 5th ACM SIGCHI symposium on Engineering interactive computing system},
pages = {23--32},
title = {{CrowdAdapt: enabling crowdsourced web page adaptation for individual viewing conditions and preferences}},
url = {http://dl.acm.org/citation.cfm?id=2480304},
year = {2013}
}
@incollection{Fowley2018Experimentation,
abstract = {Migration software systems to the cloud causes challenges. This applies especially for companies that do not have sufficient cloud expertise. In many of these companies there is a clear ideas about expected benefits. There is also an awareness of some potential problems. However, this is often not sufficient to assess the risks before starting on a full cloud migration of a legacy system. Technical and conceptual analyses can only help to identify risks in the migration process with from a cost and a quality perspective to a limited extent. So, we investigate here the suitability of feasibility studies with a focus on experimental exploration. These studies would generally only cost 5{\%} of the overall costs of a migration project, but can strongly support a reliable risk assessment. These can determine how much of the expectations and intentions can achieved in a cloud deployment. The cost of the migration, but also the cost of operating an IT system in the cloud can be estimated in the context of quality expectations. Using a feasibility study with an experimental core based on a partial prototype delivers much more reliable figures regarding configurations, quality-of-service and costing than a theoretical analysis could deliver. We will embed our feasibility study approach into a pattern-based migration method. We report on a number of case studies to validate the expected benefits of feasibility-driven migration.},
author = {Fowley, Frank and Elango, Divyaa Manimaran and Magar, Hany and Pahl, Claus},
booktitle = {Cloud Computing and Service Science. CLOSER 2017. Communications in Computer and Information Science},
doi = {10.1007/978-3-319-94959-8_9},
editor = {{Ferguson D.}, Mu{\~{n}}oz V. and J., Cardoso and M., Helfert and C., Pahl},
file = {:Users/sebastian/Downloads/Cloud{\_}Migration{\_}Analysis{\_}Planning{\_}2018.pdf:pdf},
isbn = {978-3-319-94958-1},
issn = {15557162},
keywords = {IC4,candidate},
mendeley-tags = {IC4,candidate},
number = {July},
pages = {157--176},
publisher = {Springer, Cham},
title = {{The Benefits of Using Experimental Exploration for Cloud Migration Analysis and Planning}},
url = {http://link.springer.com/10.1007/978-3-319-94959-8{\_}9},
volume = {864},
year = {2018}
}
@book{Martin1991RAD,
address = {Indianapolis, IN, USA},
author = {Martin, James},
isbn = {0-02-376775-8},
publisher = {Macmillan Publishing Co., Inc.},
title = {{Rapid Application Development}},
year = {1991}
}
@article{Wasserman1982,
abstract = {The User Software Engineering methodology is a set of techniques, supported by automated tools (Unified Support Environment), to support the specification and implementation of interactive information systems. The methodology advocates construction of a prototype of the user/program dialogue as an aid to the analysis process, and suggests the construction of a functional prototype as an aid to the specification. The USE tool RAPID (RApid Prototypes of Interactive Dialogues) supports the construction of prototypes and partial systems. RAPID builds upon two automated tools, the Transition Diagram Interpreter (TDI) and a relational database management system (Troll). This paper describes the role of prototypes in the USE methodology and the function and use of RAPID, TDI, and Troll.},
address = {New York, New York, USA},
author = {Wasserman, Anthony I. and Shewmake, David T.},
doi = {10.1145/1006258.1006289},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Wasserman, Shewmake - 1982 - Rapid prototyping of interactive information systems.pdf:pdf},
isbn = {089791094X},
issn = {01635948},
journal = {ACM SIGSOFT Software Engineering Notes},
month = {dec},
number = {5},
pages = {171--180},
publisher = {ACM Press},
title = {{Rapid prototyping of interactive information systems}},
url = {http://portal.acm.org/citation.cfm?doid=1006259.1006289 http://portal.acm.org/citation.cfm?doid=1006258.1006289},
volume = {7},
year = {1982}
}
@misc{W3C2018WebAssembly,
author = {W3C},
booktitle = {W3C Working Draft, 4 September 2018},
institution = {W3C},
keywords = {standard},
mendeley-tags = {standard},
title = {{WebAssembly Core Specification}},
url = {https://www.w3.org/TR/wasm-core-1/},
year = {2018}
}
@article{Domingos2012,
author = {Domingos, Pedro},
doi = {10.1145/2347736.2347755},
file = {:Users/sebastian/Downloads/cacm12.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
month = {oct},
number = {10},
pages = {78},
title = {{A few useful things to know about machine learning}},
url = {http://dl.acm.org/citation.cfm?doid=2347736.2347755},
volume = {55},
year = {2012}
}
@techreport{REMICS2013Handbook,
author = {Benguria, Gorka and Elves{\ae}ter, Brian and Ilieva, Sylvia},
file = {:Users/sebastian/Downloads/REMICS{\_}D2.6{\_}V1.0.pdf:pdf},
keywords = {REMICS,candidate},
mendeley-tags = {REMICS,candidate},
title = {{REMICS Handbook , Final Release}},
year = {2013}
}
@article{Gordon1995RapidPrototyping,
author = {Gordon, V.S. and Bieman, J.M.},
doi = {10.1109/52.363162},
file = {:Users/sebastian/Downloads/00363162.pdf:pdf},
journal = {IEEE Software},
keywords = {prototyping},
mendeley-tags = {prototyping},
month = {jan},
number = {1},
pages = {85--95},
title = {{Rapid prototyping: lessons learned}},
url = {http://ieeexplore.ieee.org/document/363162/},
volume = {12},
year = {1995}
}
@book{Weise2009Optimization,
abstract = {This e-book is devoted to global optimization algorithms, which are methods to find opti- mal solutions for given problems. It especially focuses on Evolutionary Computation by dis- cussing evolutionary algorithms, genetic algorithms, Genetic Programming, Learning Classi- fier Systems, Evolution Strategy, Differential Evolution, Particle Swarm Optimization, and Ant Colony Optimization. It also elaborates on other metaheuristics like Simulated An- nealing, Extremal Optimization, Tabu Search, and Random Optimization. The book is no book in the conventional sense: Because of frequent updates and changes, it is not really intended for sequential reading but more as some sort of material collection, encyclopedia, or reference work where you can look up stuff, find the correct context, and are provided with fundamentals.},
author = {Weise, Thomas},
doi = {10.1.1.64.8184},
edition = {2nd Ed},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Weise - 2009 - Global Optimization Algorithms–Theory and Application.pdf:pdf},
publisher = {Thomas Weise},
title = {{Global Optimization Algorithm: Theory and Application}},
url = {http://www.it-weise.de/projects/book.pdf{\%}5Cnhttp://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.64.8184{\&}rep=rep1{\&}type=pdf},
volume = {1},
year = {2009}
}
@incollection{Rodriguez-Echeverria2012MIGRARIA,
abstract = {Rodr{\'{i}}guez-Echeverr{\'{i}}a, R., Conejero, J. M., Clemente, P. J., Preciado, J. C., {\&} S{\'{a}}nchez-Figueroa, F. (2011). Modernization of legacy web applications into rich internet applications. In Current Trends in Web Engineering (pp. 236-250). Springer Berlin Heidelberg.},
annote = {focus on MDWE, UI

ADM KDM

static {\&} dynamic analysis {\textgreater} knowledge representation with KDM {\textgreater} (optional) map to RIA-MDWE approach {\textgreater} (optional) refinements {\textgreater} code generation},
author = {Rodr{\'{i}}guez-Echeverr{\'{i}}a, Roberto and Conejero, Jos{\'{e}} Mar{\'{i}}a and Clemente, Pedro J. and Preciado, Juan Carlos and S{\'{a}}nchez-Figueroa, Fernando},
booktitle = {7th Model-Driven Web Engineering Workshop, in conjunction with International Conference on Web Engineering (ICWE)},
doi = {10.1007/978-3-642-27997-3_24},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Rodr{\'{i}}guez-Echeverr{\'{i}}a et al. - 2012 - Modernization of Legacy Web Applications into Rich Internet Applications.pdf:pdf},
keywords = {MIGRARIA,candidate,rich internet applications,service identification,software modernization,software reengineering,web models transformations},
mendeley-tags = {MIGRARIA,candidate,service identification},
pages = {236--250},
title = {{Modernization of Legacy Web Applications into Rich Internet Applications}},
url = {http://link.springer.com/10.1007/978-3-642-27997-3{\_}24},
year = {2012}
}
@inproceedings{Zakai2011Emscripten,
abstract = {We present Emscripten, a compiler from LLVM (Low Level Virtual Machine) assembly to JavaScript. This opens up two avenues for running code written in languages other than JavaScript on the web: (1) Compile code directly into LLVMassembly, and then compile that into JavaScript using Emscripten, or (2) Compile a languages entire runtime into LLVMand then JavaScript, as in the previous approach, and then use the compiled runtime to run code written in that language. For example, the former approach can work for C and C++, while the latter can work for Python; all three examples open up new opportunities for running code on the web. Emscripten itself is written in JavaScript and is avail- able under the MIT license (a permissive open source li- cense), at http://www.emscripten.org. As a compiler from LLVM to JavaScript, the challenges in designing Em- scripten are somewhat the reverse of the norm one must go from a low-level assembly into a high-level language, and recreate parts of the original high-level structure of the code that were lost in the compilation to low-level LLVM. We detail the methods used in Emscripten to deal with those challenges, and in particular present and prove the validity of Emscriptens Relooper algorithm, which recreates high- level loop structures from low-level branching data.},
author = {Zakai, Alon},
booktitle = {Proceedings of the ACM international conference companion on Object oriented programming systems languages and applications companion},
doi = {10.1145/2048147.2048224},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Zakai - 2011 - Emscripten an LLVM-to-JavaScript compiler.pdf:pdf},
isbn = {978-1-4503-0942-4},
keywords = {decompiler,javascript,llvm},
pages = {301--312},
title = {{Emscripten: an LLVM-to-JavaScript compiler}},
url = {http://doi.acm.org/10.1145/2048147.2048224},
year = {2011}
}
@inproceedings{Mohagheghi2011REMICS,
abstract = {The key barrier to widespread uptake of cloud computing is the lack of trust in clouds by potential customers. While preventive controls for security and privacy are actively researched, there is still little focus on detective controls related to cloud accountability and auditability. The complexity resulting from large-scale virtualization and data distribution carried out in current clouds has revealed an urgent research agenda for cloud accountability, as has the shift in focus of customer concerns from servers to data. This paper discusses key issues and challenges in achieving a trusted cloud through the use of detective controls, and presents the TrustCloud framework, which addresses accountability in cloud computing via technical and policy-based approaches.},
annote = {complete approach (all ReMiP disciplines)},
author = {Mohagheghi, Parastoo and S{\ae}ther, Thor},
booktitle = {2011 IEEE World Congress on Services},
doi = {10.1109/SERVICES.2011.26},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Mohagheghi, S{\ae}ther - 2011 - Software Engineering Challenges for Migration to the Service Cloud Paradigm Ongoing Work in the REMICS P(2).pdf:pdf},
isbn = {978-1-4577-0879-4},
issn = {2378-3818},
keywords = {Cloud computing,Methodology,Migration,REMICS,Service-oriented architecture,Software engineering,candidate,cloud computing,methodology,migration,service-oriented architecture,software engineering},
mendeley-tags = {REMICS,candidate},
month = {jul},
pages = {507--514},
publisher = {IEEE},
title = {{Software Engineering Challenges for Migration to the Service Cloud Paradigm: Ongoing Work in the REMICS Project}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6012795 http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6012736},
year = {2011}
}
@inproceedings{Watanabe2002NCGA,
abstract = {In this paper, a new genetic algorithm for multi-objective optimization problems is in- troduced. That is called ”Neighborhood Cul- tivation GA (NCGA)”. In the recent stud- ies such as SPEA2 or NSGA-II, it is demon- strated that some mechanisms are impor- tant; the mechanisms of placement in an archive of the excellent solutions, sharing without parameters, assign of fitness, selec- tion and reflection the archived solutions to the search population. NCGA includes not only these mechanisms but also the neighbor- hood crossover. The comparison of NCGA with SPEA2 and NSGA-II by some test func- tions shows that NCGA is a robust algorithm to find Pareto-optimum solutions. Through the comparison between the case of using neighborhood crossover and the case of us- ing normal crossover in NCGA, the effect of neighborhood crossover is made clear.},
author = {Watanabe, Shinya and Hiroyasu, Tomoyuki and Miki, Mitsunori},
booktitle = {Proceedings of the 4th Asia-Pacific Conference on Simulated Evolution And Learning},
doi = {10.1.1.560.1370},
file = {:Users/sebastian/Downloads/10.1.1.560.1370.pdf:pdf},
keywords = {gorithm,multi-objective optimizationqb genetic al-,neighborhood crossover},
pages = {198--202},
title = {{NCGA : Neighborhood Cultivation Genetic Algorithm for Multi-Objective Optimization Problems}},
volume = {6930},
year = {2002}
}
@article{Tan2016APIEconomy,
abstract = {As Web APIs become the backbone of Web, cloud, mobile, and machine learning applications, the services computing community will need to expand and embrace opportunities and challenges from these domains.},
author = {Tan, Wei and Fan, Yushun and Ghoneim, Ahmed and Hossain, M. Anwar and Dustdar, Schahram},
doi = {10.1109/MIC.2016.74},
file = {:Users/sebastian/Downloads/07529010.pdf:pdf},
issn = {1089-7801},
journal = {IEEE Internet Computing},
keywords = {Big Data,Internet/Web technologies,Machine learning,SOA,Web API,cloud computing,intelligent systems,service-oriented architecture,services computing},
month = {jul},
number = {4},
pages = {64--68},
publisher = {IEEE},
title = {{From the Service-Oriented Architecture to the Web API Economy}},
url = {http://ieeexplore.ieee.org/document/7529010/},
volume = {20},
year = {2016}
}
@inproceedings{Rivero2013,
abstract = {In the last years, agile development methodologies have been widely adopted. However, they still lack support for API requirements while, at the same time, public RESTful APIs are fueling a rapid growth of web applications providing services built on other services. On the other hand, whereas Model-Driven Development techniques successfully increase the productivity in the development of data-intensive web applications, they lack the agility required when developing heterogeneous web applications with frequent requirement changes. In this paper we introduce MockAPI, an approach based on annotating user interface mockups that combines the advantages of agile approaches and Model-Driven Development. We introduce a metamodel for annotations and demonstrate how to derive running API prototypes as starting point for agile development. RESTful API best practices and API-first development are introduced into the agile process. The MockAPI approach defines a set of constraints to accelerate the development of web applications. We also show the results of a brief validation applying MockAPI to popular web sites.},
address = {Aalborg, Denmark},
author = {Rivero, Jos{\'{e}} Mat{\'{i}}as and Heil, Sebastian and Grigera, Juli{\'{a}}n and Gaedke, Martin and Rossi, Gustavo},
booktitle = {Web Engineering},
doi = {10.1007/978-3-642-39200-9_4},
editor = {Daniel, Florian and Dolog, Peter and Li, Quing},
keywords = {API,Agile Development,Model-Driven Development,Prototyping,meAuthor},
mendeley-tags = {meAuthor},
pages = {7--21},
publisher = {Springer Berlin Heidelberg},
title = {{MockAPI: An Agile Approach Supporting API-first Web Application Development}},
url = {http://dx.doi.org/10.1007/978-3-642-39200-9{\_}4},
year = {2013}
}
@techreport{Lewis2005SMART,
address = {Pittsburgh, PA},
annote = {superseded by 2008 version Lewis2008SMART},
author = {Lewis, Grace and Morris, Edwin and O'Brien, Liam and Smith, Dennis and Wrage, Lutz},
file = {:Users/sebastian/Downloads/2005{\_}004{\_}001{\_}14528.pdf:pdf},
institution = {Software Engineering Institute, Carnegie Mellon University},
keywords = {SMART,candidate},
mendeley-tags = {SMART,candidate},
number = {CMU/SEI-2005-TN-029},
title = {{SMART: The Service-Oriented Migration and Reuse Technique}},
url = {http://resources.sei.cmu.edu/library/asset-view.cfm?AssetID=7481},
year = {2005}
}
@techreport{Lewis2008SMART,
address = {Pittsburgh, PA},
author = {Lewis, Grace and Morris, Edwin and Smith, Dennis and Simanta, Soumya},
file = {:Users/sebastian/Downloads/2008{\_}004{\_}001{\_}14936.pdf:pdf},
institution = {Software Engineering Institute, Carnegie Mellon University},
keywords = {SMART,candidate},
mendeley-tags = {SMART,candidate},
number = {CMU/SEI-2008-TN-008},
title = {{SMART: Analyzing the Reuse Potential of Legacy Components in a Service-Oriented Architecture Environment}},
url = {http://resources.sei.cmu.edu/library/asset-view.cfm?AssetID=8571},
year = {2008}
}
@incollection{Fowley2017CloudSME,
abstract = {Independent software vendors (ISVs) are often faced with the need to migrate their software products as software-as-a-service (SaaS) solutions to the cloud. We document and evaluate four case studies by considering various factors that the respective companies need to consider in a cloud migration process. We look at migration project as a software re-engineering activity, involving project planning, cloud architecture design and architecture transformation. Specifically for software vendors, a cloud migration opens opportunities such as the possibility of modernising their software through re-engineering their product architecture. However, small and mid-size enterprises(SMEs)often do not have the required cloud expertise to plan and implement a cloud migration.},
author = {Fowley, Frank and Elango, Divyaa Manimaran and Magar, Hany and Pahl, Claus},
booktitle = {SOFSEM 2017: Theory and Practice of Computer Science},
doi = {10.1007/978-3-319-51963-0_39},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Fowley et al. - 2017 - Software System Migration to Cloud-Native Architectures for SME-Sized Software Vendors.pdf:pdf},
isbn = {978-3-319-51963-0},
keywords = {IC4,architecture evolution,candidate,cloud migration,cloud native,cost models,isv,sme,software modernisation},
mendeley-tags = {IC4,candidate},
month = {oct},
pages = {498--509},
publisher = {IEEE},
title = {{Software System Migration to Cloud-Native Architectures for SME-Sized Software Vendors}},
url = {https://link.springer.com/chapter/10.1007/978-3-319-51963-0{\_}39 http://link.springer.com/10.1007/978-3-319-51963-0{\_}39},
year = {2017}
}
@book{Abrahamsson2002Agile,
archivePrefix = {arXiv},
arxivId = {1709.08439},
author = {Abrahamsson, Pekka and Salo, Outi and Ronkainen, Jussi},
eprint = {1709.08439},
file = {:Users/sebastian/Downloads/P478.pdf:pdf},
isbn = {951–38–6009–4},
keywords = {prototyping},
mendeley-tags = {prototyping},
publisher = {VTT},
title = {{Agile software development methods - Review and analysis}},
url = {http://www.vtt.fi/inf/pdf/publications/2002/P478.pdf},
year = {2002}
}
@article{Fowler2001,
abstract = {In all cases, the project's is enhanced continually In an project, it's particularly important to use to add something to a that's too},
author = {Fowler, Martin and Highsmith, Jim},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Fowler, Highsmith - 2001 - The Agile Manifesto.pdf:pdf},
institution = {The Agile Alliance},
journal = {Software Development Magazine},
title = {{The Agile Manifesto}},
url = {http://agilemanifesto.org/},
volume = {9(8)},
year = {2001}
}
@misc{Simpson2016,
author = {Simpson, Alastair},
booktitle = {Atlassian Blog},
keywords = {online},
mendeley-tags = {online},
title = {{An agile design prototype is worth a thousand user stories}},
url = {https://www.atlassian.com/blog/agile/agile-design-prototype},
urldate = {2019-02-17},
year = {2016}
}
@incollection{Rivero2013MockupDD,
abstract = {Model-Driven Web Engineering methodologies provide a more productive way of building Web Applications using high-level models and generating final implementations from them. However, they follow a waterfall-like development process, forcing to specify a different set of models sequentially to obtain a first runnable prototype of the Web Application. On the other hand, agile methodologies pursue an iterative process based on the delivery of application prototypes in short periods of time using manual coding, which results less productive and more error-prone in comparison to model-based approaches. In this work we propose a hybrid agile and Model-Driven approach called MockupDD that intends to blend the best of MDWE and agile development processes.},
address = {Cham},
author = {Rivero, Jos{\'{e}} Mat{\'{i}}as and Rossi, Gustavo},
booktitle = {Current Trends in Web Engineering: ICWE 2013 International Workshops ComposableWeb, QWE, MDWE, DMSSW, EMotions, CSE, SSN, and PhD Symposium, Aalborg, Denmark, July 8-12, 2013. Revised Selected Papers},
doi = {10.1007/978-3-319-04244-2_31},
editor = {Sheng, Quan Z and Kjeldskov, Jesper},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Rivero, Rossi - 2013 - MockupDD Facilitating Agile Support for Model-Driven Web Engineering.pdf:pdf},
isbn = {978-3-319-04244-2},
pages = {325--329},
publisher = {Springer International Publishing},
title = {{MockupDD: Facilitating Agile Support for Model-Driven Web Engineering}},
url = {https://doi.org/10.1007/978-3-319-04244-2{\_}31},
year = {2013}
}
@article{Marcotte2010Responsive,
author = {Marcotte, Ethan},
journal = {A List Apart},
number = {306},
title = {{Responsive Web Design}},
url = {https://alistapart.com/article/responsive-web-design/},
year = {2010}
}
@book{Wallmueller2001SoftwareQuality,
address = {M{\"{u}}nchen},
annote = {Prototyping p 122ff
explorative prototyping (together with users, feedback)
experimental prototyping (feasibility, technical focus)
evolutionary prototyping (incrementel, quality disadvantages)

horizontal vs vertical prototype

demonstrative prototype (ideas about interface and capabilities of new system, decision making, desirability/benefits)},
author = {Wallm{\"{u}}ller, E},
edition = {2., v{\"{o}}llig},
isbn = {978-3-446-40405-2},
publisher = {Hanser},
title = {{Software-Qualit{\"{a}}tsmanagement in der Praxis: Software-Qualit{\"{a}}t durch F{\"{u}}hrung und Verbesserung von Software-Prozessen}},
url = {https://books.google.de/books?id=BdWJuc7i0QEC},
year = {2001}
}
@inproceedings{Rivero2013MockAPI,
abstract = {In the last years, agile development methodologies have been widely adopted. However, they still lack support for API requirements while, at the same time, public RESTful APIs are fueling a rapid growth of web applications providing services built on other services. On the other hand, whereas Model- Driven Development techniques successfully increase the productivity in the development of data-intensive web applications, they lack the agility required when developing heterogeneous web applications with frequent requirement changes. In this paper we introduce MockAPI, an approach based on annotating user interface mockups that combines the advantages of agile approaches and Model-Driven Development. We introduce a metamodel for annotations and demonstrate how to derive running API prototypes as starting point for agile development. RESTful API best practices and API-first development are introduced into the agile process. The MockAPI approach defines a set of constraints to accelerate the development of web applications. We also show the results of a brief validation applying MockAPI to popular web sites.},
address = {Aalborg, Denmark},
author = {Rivero, Jos{\'{e}} Mat{\'{i}}as and Heil, Sebastian and Grigera, Juli{\'{a}}n and Gaedke, Martin and Rossi, Gustavo},
booktitle = {ICWE 2013, LNCS 7977},
doi = {10.1007/978-3-642-39200-9_4},
editor = {Daniel, F. and Dolog, P. and Li, Q.},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Rivero et al. - 2013 - MockAPI An Agile Approach Supporting API-first Web.pdf:pdf;:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Rivero, Heil, Grigera - 2013 - MockAPI An Agile Approach Supporting API-first Web.pdf:pdf},
keywords = {API,Agile Development,Model-Driven Development,Prototyping,agile development,api,model-driven development,prototyping},
pages = {7--21},
publisher = {Springer Berlin Heidelberg},
title = {{MockAPI: An Agile Approach Supporting API-first Web Application Development}},
url = {http://dx.doi.org/10.1007/978-3-642-39200-9{\_}4},
year = {2013}
}
@misc{W3C2017CSSGrid,
author = {W3C},
booktitle = {W3C Candidate Recommendation, 14 December 2017},
institution = {W3C},
keywords = {standard},
mendeley-tags = {standard},
title = {{CSS Grid Layout Module Level 1}},
url = {https://www.w3.org/TR/css-grid-1/},
urldate = {2019-02-24},
year = {2017}
}
@incollection{Nebeling2012,
abstract = {We present an approach for the lightweight development of web information systems based on the idea of involving crowds in the underlying engineering and design processes. Our approach is designed to support developers as well as non-technical end-users in composing data-driven web interfaces in a plug-n-play manner. To enable this, we introduce the notion of crowdsourced web site components whose design can gradually evolve as they get associated with more data and functionality contributed by the crowd. Hence, required components must not necessarily pre-exist or be developed by the application designer alone, but can also be created on-demand by publishing an open call to the crowd that may in response provide multiple alternative solutions. The potential of the approach is illustrated based on two initial experiments.},
address = {Berlin, Germany},
author = {Nebeling, Michael and Leone, Stefania and Norrie, Moira C},
booktitle = {Web Engineering},
doi = {10.1007/978-3-642-31753-8_3},
editor = {Brambilla, Marco and Tokuda, Takehiro and Tolksdorf, Robert},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Nebeling, Leone, Norrie - 2012 - Crowdsourced Web Engineering and Design.pdf:pdf},
isbn = {978-3-642-31753-8},
keywords = {crowd-,crowdsourcing,end-user development,lightweight web engineering},
pages = {31--45},
publisher = {Springer Berlin Heidelberg},
title = {{Crowdsourced Web Engineering and Design}},
url = {http://link.springer.com/chapter/10.1007/978-3-642-31753-8{\_}3 http://www.springerlink.com/index/61V8V65X38V22874.pdf},
year = {2012}
}
@inproceedings{Gipp2007ReMiP,
abstract = {Web sites serve to publish information, both locally in intranets as well as on a global scale. Like all software systems, they have to cope with changing requirements and evolving technologies. The reference process model for software migration, ReMiP, provides a generic process model for software migration in general. The paper introduces ReMiP and summarises the application of a tailored ReMiP towards migrating a static HTML-based Web site to a content management system.},
author = {Gipp, Torsten and Winter, Andreas},
booktitle = {2007 9th IEEE International Workshop on Web Site Evolution},
doi = {10.1109/WSE.2007.4380238},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Gipp, Winter - 2007 - Applying the ReMiP to Web Site Migration.pdf:pdf;:Users/sebastian/Downloads/04380238.pdf:pdf},
isbn = {978-1-4244-1450-5},
keywords = {Process model,Remip,Web site migration},
mendeley-tags = {Remip},
month = {oct},
pages = {9--13},
publisher = {IEEE},
title = {{Applying the ReMiP to Web Site Migration}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=4380238 http://ieeexplore.ieee.org/document/4380238/},
year = {2007}
}
@article{Highsmith2001,
abstract = {The rise and fall of the dot-com-driven Internet economy shouldn't distract us from seeing that the business environment continues to change at a dramatically increasing pace. To thrive in this turbulent environment, we must confront the business need for relentless innovation and forge the future workforce culture. Agile software development approaches such as Extreme Programming, Crystal methods, Lean Development, Scrum, Adaptive Software Development (ASD), and others view change from a perspective that mirrors today's turbulent business and technology environment.},
author = {Highsmith, Jim and Cockburn, Alistair},
doi = {10.1109/2.947100},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Highsmith, Cockburn - 2001 - Agile software development the business of innovation.pdf:pdf},
issn = {00189162},
journal = {Computer},
number = {9},
pages = {120--127},
pmid = {13348272},
title = {{Agile software development: the business of innovation}},
url = {http://ieeexplore.ieee.org/document/947100/},
volume = {34},
year = {2001}
}
@inproceedings{Heil2018ReWaMP,
abstract = {Web Migration is a challenge, in particular for Small and Medium-sized Enterprises (SMEs). In previous collaborations with SMEs we noticed an initial resistance to migrate legacy desktop applications to the web, due to concerns about the risk and lack of developers with web expertise. This initial hurdle can be mitigated by the ability to rapidly create running web prototypes based on the existing desktop codebase and expertise of the developers. Therefore, we outline a rapid prototyping approach for Web Migration, assess technologies which allow execution of legacy code in the browser and present a solution architecture, process and supporting infrastructure based on WebAssembly. We describe challenges and report on an experiment applying WebAssembly on a scenario desktop application derived from real-world industrial code.},
address = {Caceres, Spain},
author = {Heil, Sebastian and Siegert, Valentin and Gaedke, Martin},
booktitle = {Proceedings of 18th International Conference on Web Engineering (ICWE2018)},
doi = {10.1007/978-3-319-91662-0_6},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Heil, Siegert, Gaedke - 2018 - ReWaMP Rapid Web Migration Prototyping leveraging WebAssembly.pdf:pdf},
isbn = {9783319916613},
issn = {16113349},
keywords = {Prototyping,Software reuse,Web migration,WebAssembly,meFirstAuthor,prototyping,software reuse,web migration,webassembly},
mendeley-tags = {meFirstAuthor},
pages = {84--92},
title = {{ReWaMP : Rapid Web Migration Prototyping leveraging WebAssembly}},
url = {http://link.springer.com/10.1007/978-3-319-91662-0{\_}6},
volume = {10845 LNCS},
year = {2018}
}
@inproceedings{Tak2014,
abstract = {Although cloud has been adopted by many organizations as their main infrastructure for IT delivery, there are still a large number of legacy applications running in non-cloud hosting environments. Thus, it is crucial to have migration techniques for such legacy applications so that they can benefit from many advantages of cloud such as elasticity, low upfront investment, and fast time-to-market. However, migrating large number of legacy applications into cloud in a timely manner is a daunting task. Common techniques such as redeveloping (i.e., modernizing) them or reinstalling from the scratch entails high costs. To mitigate these problems, we have developed a rapid migration technique, called AppCloak, that allows users to literally copy an already-installed application to cloud and run it without any modifications. The technique is based on intercepting a selected set of system calls and replacing the parameters and return values to hide any differences of environments to the application. We demonstrate that our technique works in Amazon EC2 and quantify the performance overhead.},
author = {Tak, Byung Chul and Tang, Chunqiang},
booktitle = {2014 IEEE 7th International Conference on Cloud Computing},
doi = {10.1109/CLOUD.2014.112},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Tak, Tang - 2014 - AppCloak Rapid Migration of Legacy Applications into Cloud.pdf:pdf},
isbn = {978-1-4799-5063-8},
issn = {21596190},
keywords = {cloud,legacy application,migration},
month = {jun},
pages = {810--817},
publisher = {IEEE},
title = {{AppCloak: Rapid Migration of Legacy Applications into Cloud}},
url = {http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6973818},
year = {2014}
}
@inproceedings{Khadka2014ProfessionalsModernization,
abstract = {Existing research in legacy system modernization has traditionally focused on technical challenges, and takes the standpoint that legacy systems are obsolete, yet crucial for an organization's operation. Nonetheless, it remains unclear whether practitioners in the industry also share this perception. This paper describes the outcome of an exploratory study in which 26 industrial practitioners were interviewed on what makes a software system a legacy system, what the main drivers are that lead to the modernization of such systems, and what challenges are faced during the modernization process. The findings of the interviews have been validated by means of a survey with 198 respondents. The results show that practitioners value their legacy systems highly, the challenges they face are not just technical, but also include business and organizational aspects.},
address = {New York, New York, USA},
author = {Khadka, Ravi and Batlajery, Belfrit V. and Saeidi, Amir M. and Jansen, Slinger and Hage, Jurriaan},
booktitle = {Proceedings of the 36th International Conference on Software Engineering - ICSE 2014},
doi = {10.1145/2568225.2568318},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Khadka et al. - 2014 - How do professionals perceive legacy systems and software modernization.pdf:pdf},
isbn = {9781450327565},
keywords = {grounded theory,legacy modernization,legacy systems},
pages = {36--47},
publisher = {ACM Press},
title = {{How do professionals perceive legacy systems and software modernization?}},
url = {http://dl.acm.org/citation.cfm?doid=2568225.2568318},
year = {2014}
}
@incollection{Nebeling2013Responsive,
abstract = {Responsive design is a major trend in web development to cater for the diversity of devices used for web browsing. However, applying responsive design to existing web sites often involves major reengineering due to the underlying fluid grid concept. Moreover, applications of responsive design are currently limited to desktop-to-mobile adaptation. This tutorial introduces the main ideas behind responsive design with a focus on the methods and technologies. Based on previous research, we highlight several limitations of the original approach and show how the concepts and methods can be extended to adapt to many different viewing conditions including large-screen settings and touch devices.},
author = {Nebeling, Michael and Norrie, Moira C.},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-642-39200-9_47},
file = {:Users/sebastian/Downloads/Nebeling-Norrie2013{\_}Chapter{\_}ResponsiveDesignAndDevelopment.pdf:pdf},
isbn = {9783642391996},
issn = {03029743},
keywords = {interface-driven web engineering,responsive web design},
pages = {510--513},
title = {{Responsive Design and Development: Methods, Technologies and Current Issues}},
url = {http://link.springer.com/10.1007/978-3-642-39200-9{\_}47},
volume = {7977 LNCS},
year = {2013}
}
@techreport{DSDMConsortium2014,
author = {{DSDM Consortium}},
title = {{DSDM Handbooks}},
url = {https://www.agilebusiness.org/resources/dsdm-handbooks},
year = {2014}
}
@techreport{AmazonWebServices2018Migration,
author = {{Amazon Web Services Inc.}},
file = {:Users/sebastian/Downloads/aws-migration-whitepaper-2018.pdf:pdf},
institution = {Amazon Web Services, Inc.},
keywords = {AWS Migration,candidate},
mendeley-tags = {AWS Migration,candidate},
number = {March},
publisher = {Amazon Web Services, Inc.},
title = {{AWS Migration Whitepaper}},
url = {https://aws.amazon.com/de/whitepapers/},
year = {2018}
}
@article{Mauffrey2017,
abstract = {Prototyping, the creation and enaction of models based on operational scenarios, has been advocated as a useful software engineering paradigm because it lends itself to intense interaction between customers, users, and developers, resulting in early validation of specifications and designs. An extensive and widespread interest in software prototyping in recent years has resulted in a daunting amount of literature and dozens of proposed methods and tools. As with any immature and growing technology, the expanding literature and approaches have resulted in correspondingly expansive and confusing terminology. This report presents an overview of technology and literature relating to the creation and use of software system prototypes. In addition to an annotated bibliography of recent prototyping literature, a technology framework, taxonomy, and series of classifications are provided. The intent of this report is to provide a basic roadmap through the available literature and technology.},
author = {Mauffrey, Cyril and Scarlat, Marius M.},
doi = {10.1007/978-3-319-69350-7},
file = {:Users/sebastian/Downloads/1992{\_}005{\_}001{\_}16067.pdf:pdf},
isbn = {9783319693507},
journal = {Medical Writing and Research Methodology for the Orthopaedic Surgeon},
keywords = {abstracts,addition,approach,bibliographies,classification,engineering,index terms,interactions,maps,models,prototypes,roads,scenarios,software engineering,specifications,taxonomy,tools,validation},
number = {October},
pages = {1--86},
title = {{A Classification and Bibliography of Software Prototyping}},
year = {2017}
}
@misc{Gartner2016Culture,
author = {Gartner},
booktitle = {Smarter with Gartner},
keywords = {online},
mendeley-tags = {online},
title = {{The Key to Business Transformation is Culture}},
url = {https://www.gartner.com/smarterwithgartner/the-key-to-business-transformation-is-culture/},
urldate = {2018-02-11},
year = {2016}
}
@article{Sjoberg2013,
abstract = {Context: Code smells are assumed to indicate bad design that leads to less maintainable code. However, this assumption has not been investigated in controlled studies with professional software developers. Aim: This paper investigates the relationship between code smells and maintenance effort. Method: Six developers were hired to perform three maintenance tasks each on four functionally equivalent Java systems originally implemented by different companies. Each developer spent three to four weeks. In total, they modified 298 Java files in the four systems. An Eclipse IDE plug-in measured the exact amount of time a developer spent maintaining each file. Regression analysis was used to explain the effort using file properties, including the number of smells. Result: None of the 12 investigated smells was significantly associated with increased effort after we adjusted for file size and the number of changes; Refused Bequest was significantly associated with decreased effort. File size and the number of changes explained almost all of the modeled variation in effort. Conclusion: The effects of the 12 smells on maintenance effort were limited. To reduce maintenance effort, a focus on reducing code size and the work practices that limit the number of changes may be more beneficial than refactoring code smells.},
author = {Sjoberg, Dag I.K. and Yamashita, Aiko and Anda, Bente C.D. and Mockus, Audris and Dyba, Tore},
doi = {10.1109/TSE.2012.89},
file = {:Users/sebastian/Downloads/06392174.pdf:pdf},
issn = {0098-5589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Maintainability,code churn,object-oriented design,product metrics},
month = {aug},
number = {8},
pages = {1144--1156},
title = {{Quantifying the Effect of Code Smells on Maintenance Effort}},
url = {http://ieeexplore.ieee.org/document/6392174/},
volume = {39},
year = {2013}
}
@inproceedings{Nielsen1993,
abstract = {For 11 studies, we find that the detection of usability problems as a function of number of users tested or heuristic evaluators employed is well modeled as a Poisson process. The model can be used to plan the amount of evaluation required to achieve desired levels of thoroughness or benefits. Results of early tests can provide estimates of the number of problems left to be found and the number of additional evaluations needed to find a given fraction. With quantitative evaluation costs and detection values, the model can estimate the numbers of evaluations at which optimal cost/benefit ratios are obtained and at which marginal utility vanishes. For a “medium” example, we estimate that 16 evaluations would be worth their cost, with maximum benefit/cost ratio at four.},
address = {New York, New York, USA},
annote = {https://www.nngroup.com/articles/why-you-only-need-to-test-with-5-users/},
author = {Nielsen, Jakob and Landauer, Thomas K.},
booktitle = {Proceedings of the SIGCHI conference on Human factors in computing systems - CHI '93},
doi = {10.1145/169059.169166},
file = {:Users/sebastian/Downloads/p206-nielsen.pdf:pdf},
isbn = {0897915755},
issn = {0-89791-575-5},
pages = {206--213},
publisher = {ACM Press},
title = {{A mathematical model of the finding of usability problems}},
year = {1993}
}
@techreport{ISO/IEEE24765Vocabulary,
abstract = {This document provides a common vocabulary applicable to all systems and software engineering work. It was prepared to collect and standardize terminology. This document is intended to serve as a useful reference for those in the information technology field, and to encourage the use of systems and software engineering standards prepared by ISO and liaison organizations IEEE Computer Society and Project Management Institute. This document includes references to the active source standards for definitions so that systems and software engineering concepts and requirements can be further explored.},
author = {ISO/IEEE},
booktitle = {ISO/IEC/IEEE 24765:2017(E)},
doi = {10.1109/IEEESTD.2017.8016712},
file = {:Users/sebastian/Library/Application Support/Mendeley Desktop/Downloaded/Unknown - 2017 - ISOIECIEEE International Standard - Systems and software engineering--Vocabulary.pdf:pdf},
keywords = {24765,IEC Standards,IEC standards,IEEE Computer Society and Project Management Insti,IEEE Standards,IEEE standards,ISO Standards,ISO standards,ISO/IEC/IEEE international standard,Informatino technology,Software engineering,Systems engineering and theoryt,Terminology,computer,dictionary,information technology,project management,software engineering,software engineering concepts,software requirements,standard,systems engineering,terminology standardization,vocabulary},
mendeley-tags = {standard},
month = {aug},
title = {{ISO/IEC/IEEE International Standard - Systems and software engineering--Vocabulary}},
year = {2017}
}
@book{Sneed2010SoftwareMigration,
author = {Sneed, Harry M. and Wolf, Ellen and Heilmann, Heidi},
isbn = {978-3898645645},
publisher = {dpunkt Verlag},
title = {{Softwaremigration in der Praxis: {\"{U}}bertragung alter Softwaresysteme in eine moderne Umgebung}},
year = {2010}
}
@article{Boehm1988Spiral,
author = {Boehm, Barry W.},
doi = {10.1109/2.59},
file = {:Users/sebastian/Downloads/r5061.pdf:pdf},
issn = {0018-9162},
journal = {IEEE Computer},
month = {may},
number = {5},
pages = {61--72},
title = {{A spiral model of software development and enhancement}},
url = {http://ieeexplore.ieee.org/document/59/},
volume = {21},
year = {1988}
}
